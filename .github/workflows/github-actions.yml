name: CI/CD for BobApp
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main      

jobs:
  build-test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml')}}    
          restore-keys: |
            maven-

      - name: Build and Run Tests
        run: mvn clean verify dependency:copy-dependencies
        working-directory: ./back

      - name: Upload Backend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifacts
          path: |
            ./back/target/classes
            ./back/target/dependency
            ./back/target/site/jacoco/jacoco.xml

  build-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci
        working-directory: ./front

      - name: Run tests with coverage
        run: npm test -- --code-coverage --browsers ChromeHeadless --watch=false
        working-directory: ./front

      - name: Upload Frontend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          path: ./front/coverage/bobapp/lcov.info 

  sonar-code-quality:
    needs: [build-test-backend, build-test-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Backend Artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-artifacts
          path: ./artifacts

      - name: Download Frontend Artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifacts
          path: ./artifacts    

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}

  docker-push:
    needs: [sonar-code-quality]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: $${{ secrets.DOCKER_USERNAME }}
          password: $${{ secrets.DOCKER_PASSWORD }}

      - name: Define Docker Image Tags
        run: |
          echo "BACK_IMAGE=${{secrets.DOCKER_USERNAME}}/bobapp-back:latest" >> $GITHUB_ENV
          echo "FRONT_IMAGE=${{secrets.DOCKER_USERNAME}}/bobapp-front:latest" >> $GITHUB_ENV

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t $BACK_IMAGE ./back
          docker push $BACK_IMAGE

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t $FRONT_IMAGE ./front
          docker push $FRONT_IMAGE             



      
    








 