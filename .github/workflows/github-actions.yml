name: CI/CD for BobApp
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main      

jobs:
  build-test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml')}}    
          restore-keys: |
            maven-

      - name: Build and Run Tests
        run: mvn clean verify dependency:copy-dependencies
        working-directory: ./back

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco

      - name: Upload Compiled classes and dependencies
        uses: actions/upload-artifact@v4
        with:
          name: classes-and-dependencies
          path: |
            ./back/target/classes
            ./back/target/dependency

  build-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm ci
        working-directory: ./front

      - name: Run tests with coverage
        run: npm test -- --code-coverage --browsers ChromeHeadless --watch=false
        working-directory: ./front

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./front/coverage/bobapp 

  sonar-code-quality:
    needs: [build-test-backend, build-test-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download compiled Java classes and dependencies 
        uses: actions/download-artifact@v4
        with:
          name: classes-and-dependencies
          path: ./target

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}    
      
    








 